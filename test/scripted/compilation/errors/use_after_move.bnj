# test:common

struct Resource {
    func __deinit__(self) {}
}

# test:subtest
# test:error 14:13 "resource used after move"
# test:note 13:13 "previously moved here"

func main() {
    var a = Resource {};
    var b = a;
    var c = a;
}

# test:subtest
# test:error 26:13 "resource used after move"
# test:note 25:13 "previously moved here"

func consume(resource: Resource) {}

func main() {
    var a = Resource {};
    consume(a);
    var b = a;
}

# test:subtest
# test:error 41:13 "resource used after move"
# test:note 38:17 "previously moved in conditional branch here"

func main() {
    var a = Resource {};
    var flag = true;
    
    if flag {
        var b = a;
    }
    
    var c = a;
}

# test:subtest
# test:error 54:17 "resource used after move"
# test:note 53:17 "previously moved here"

func main() {
    var a = Resource {};
    var flag = true;
    
    if flag {
        var b = a;
        var c = a;
    }    
}

# test:subtest
# test:error 69:13 "resource used after move"
# test:note 68:13 "previously moved partially here"

func main() {
    var a = (
        Resource {},
        Resource {},
    );
    
    var b = a.0;
    var c = a;
}

# test:subtest
# test:error 89:13 "resource used after move"
# test:note 86:17 "previously moved partially in conditional branch here"

func main() {
    var a = (
        Resource {},
        Resource {},
    );
    
    var flag = true;
    
    if flag {
    } else {
        var b = a.0;
    }
    
    var c = a;
}

# test:subtest
# test:error 111:13 "resource used after move"
# test:note 110:13 "previously moved partially here"

struct Pair {
    var a: i32;
    var b: (Resource, Resource);
}

func main() {
    var a = Pair {
        a: 0,
        b: (
            Resource {},
            Resource {},
        ),
    };
    
    var b = a.b.0;
    var c = a;
}

# test:subtest
# test:error 131:13 "resource used after move"
# test:note 128:16 "previously moved here"
# test:error 132:13 "resource used after move"
# test:note 129:21 "previously moved in conditional branch here"

func consume(resource: Resource) -> bool {
    return true;
}

func main() {
    var a = Resource {};
    var b = Resource {};

    if consume(a) {}
    else if consume(b) {}

    var c = a;
    var d = b;
}

# test:subtest
# test:error 146:13 "resource used after move"
# test:note 145:19 "previously moved here"

func consume(resource: Resource) -> bool {
    return false;
}

func main() {
    var a = Resource {};
    while consume(a) {}
    var b = a;
}

# test:subtest
# test:error 160:13 "resource used after move"
# test:note 159:22 "previously moved here"

func consume(resource: Resource) -> Array[i32] {
    return [];
}

func main() {
    var a = Resource {};
    for _ in consume(a) {}
    var b = a;
}

# test:subtest
# test:error 174:13 "resource used after move"
# test:note 173:22 "previously moved here"

func consume(resource: Resource) -> i32 except bool {
    return 0;
}

func main() {
    var a = Resource {};
    try _ in consume(a) {}
    var b = a;
}

# test:subtest
# test:error 188:11 "resource used after move"
# test:note 187:17 "previously moved here"

struct Resource {
    func __deinit__(self) {}
}

func main() {
    var array = [Resource {}, Resource {}, Resource {}];
    for item in array {}
    print(array);
}

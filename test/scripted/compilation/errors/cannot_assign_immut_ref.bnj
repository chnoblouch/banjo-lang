# test:subtest
# test:error 6:5 "cannot assign to immutable"
# test:note 5:12 "'a' is an immutable reference ('ref i32')"

func f(ref a: i32) {
    a = 0;
}

# test:subtest
# test:error 18:5 "cannot assign to immutable"
# test:note 17:12 "'s' is an immutable reference ('ref S')"

struct S {
    var a: i32;
}

func f(ref s: S) {
    s.a = 0;
}

# test:subtest
# test:error 26:5 "cannot assign to immutable"
# test:note 25:12 "'a' is an immutable reference ('ref (f32, i32)')"

func f(ref a: (f32, i32)) {
    a.1 = 0; 
}

# test:subtest
# test:error 34:5 "cannot assign to immutable"
# test:note 33:12 "'a' is an immutable reference ('ref [i32; 3]')"

func f(ref a: [i32; 3]) {
    a[2] = 0; 
}

# test:subtest
# test:error 46:5 "cannot assign to immutable"
# test:note 45:12 "'s' is an immutable reference ('ref S')"

struct S {
    var a: (bool, [i32; 5]);
}

func f(ref s: S) {
    (s.a).1[3] = 0;  # TODO: Fix lexer
}

# test:subtest
# test:error 56:5 "cannot assign to immutable"
# test:note 55:9 "'r' is an immutable reference ('ref i32')"

func main() {
    var a = 10;
    ref r = a;
    r = 0;
}

# test:subtest
# test:error 67:9 "cannot assign to immutable"
# test:note 66:13 "'value' is an immutable reference ('ref i32')"

func main() {
    var array = [0, 1, 2];

    for ref value in array {
        value = 42;
    }
}

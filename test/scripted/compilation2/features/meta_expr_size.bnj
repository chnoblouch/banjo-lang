# test:subtest
# test:output "1,2,4,8,1,2,4,8,8,4,8,1,8"

func main() {
    print(meta(i8).size);
    print(",");
    print(meta(i16).size);
    print(",");
    print(meta(i32).size);
    print(",");
    print(meta(i64).size);
    print(",");
    print(meta(u8).size);
    print(",");
    print(meta(u16).size);
    print(",");
    print(meta(u32).size);
    print(",");
    print(meta(u64).size);
    print(",");
    print(meta(usize).size);
    print(",");
    print(meta(f32).size);
    print(",");
    print(meta(f64).size);
    print(",");
    print(meta(bool).size);
    print(",");
    print(meta(addr).size);
}

# test:subtest
# test:output "8,8,8"

func main() {
    print(meta(*i32).size);
    print(",");
    print(meta(*bool).size);
    print(",");
    print(meta(func(i32, bool) -> f32).size);
}

# test:subtest
# test:output "24"

struct Object {
    var id: u32;
    var name: *u8;
    var x: f32;
    var y: f32;
}

func main() {
    print(meta(Object).size);
}

# test:subtest
# test:output "8,24"

func main() {
    print(meta((i64,)).size);
    print(",");
    print(meta((i8, usize, f32)).size);
}

# test:subtest
# test:output "4"

enum Fruit {
    APPLE,
    PEAR,
    BANANA
}

func main() {
    print(meta(Fruit).size);
}

use os;

struct Lock[T] {
    var mutex: *Mutex[T];
    
    pub func get(self) -> *T {
        return &self.mutex.value;
    }
    
    pub func set(self, value: T) {
        self.mutex.value = value;
    }
    
    pub func __deinit__(self) {
        os.mutex.unlock(self.mutex.handle);
    }
}

struct Mutex[T] {
    var value: T;
    var handle: os.mutex.Mutex;

    pub func new(value: T) -> Mutex[T] {
        return {
            value,
            handle: os.mutex.create()
        };
    }
    
    pub func lock(self) -> Lock[T] {
        os.mutex.lock(self.handle);
        return Lock[T] { mutex: self };
    }
}
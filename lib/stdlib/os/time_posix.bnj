use std.config;

meta if config.OS == config.LINUX || config.OS == config.MACOS || config.OS == config.ANDROID {
    struct timespec {
        var tv_sec: u64;
        var tv_nsec: u64;
    }
    
    const CLOCK_REALTIME: u64 = 0;
    const CLOCK_MONOTONIC: u64 = 1;
    
    native func clock_gettime(clk_id: u64, tp: *timespec) -> i32;
    
    pub func system_ticks() -> u64 {
        var time: timespec;
        clock_gettime(CLOCK_REALTIME, &time);
        return 1000000000 * time.tv_sec + time.tv_nsec;
    }
    
    pub func system_frequency() -> u64 {
        return 1000000000;
    }
    
    pub func system_ticks_since_unix_epoch() -> u64 {
        return 0;
    }

    pub func monotonic_ticks() -> u64 {
        var time: timespec;
        clock_gettime(CLOCK_MONOTONIC, &time);
        return 1000000000 * time.tv_sec + time.tv_nsec;
    }

    pub func monotonic_frequency() -> u64 {
        return 1000000000;
    }
}
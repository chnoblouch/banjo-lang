use std.config;

meta if config.OS == config.WINDOWS {
	use winapi;
	
	type Error = winapi.Dword;
	
	pub func last() -> Error {
		return winapi.get_last_error();
	}
	
	pub func to_string(error: Error) -> String {
		var buffer: *u8 = null;
		
		var length = winapi.format_message(
			winapi.FORMAT_MESSAGE_ALLOCATE_BUFFER | winapi.FORMAT_MESSAGE_FROM_SYSTEM | winapi.FORMAT_MESSAGE_IGNORE_INSERTS,
			null,
			error,
			0x400,  # MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT)
			&buffer,
			0,
			null
		);
		
		var trimmed_length = length as usize - 2;
		var slice = StringSlice.new(buffer, trimmed_length);
		var string = String.copy(slice);
		
		winapi.local_free(buffer as addr);
		
		return string;
	}
} else {
	type Error = u32;
	
	pub func last() -> Error {
		return 0;
	}
	
	pub func to_string(error: Error) -> String {
		return "";
	}
}